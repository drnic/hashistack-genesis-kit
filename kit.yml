---
name: hashistack
author: Justin Carter <justin@starkandwayne.com>
github: https://github.com/genesis-community/hashistack-genesis-kit
homepage: https://github.com/genesis-community/hashistack-genesis-kit

subkits:
- prompt: Do you want to use subkit 'vault'?
  subkit: vault
- prompt: Do you want to use subkit 'nomad'?
  subkit: nomad

params:
  base:
  - description: The datacenter that this deployment is being deployed to
    ask: What is the datacenter
    param: datacenter
  - description: Should ssl connections be verified via the provided ca certs
    param: verify_ssl
  - description: How many instances should be used for the main clusters
    param: server_instances
  - description: The name of the BOSH network to deploy the servers to
    param: server_network
  - description: The name of the BOSH disk type to give servers
    param: server_disk_type
  - description: The name of the BOSH VM type for the servers
    param: server_vm_type

  vault:
  - description: |
      For zero-downtime updates provide a token with the policy
      path "sys/step-down" {
        capabilities = ["update", "sudo"]
      }
      This will allow BOSH to demote the leader node before updating
    param: vault_step_down_token
  - description: |
      For zero-downtime updates individual nodes must be unsealed after updating.
      By providing the unseal keys this will be taken care of automatically.
      It is highly advised to rekey Vault after each update so that the unseal keys
      don't remain exposed in the manifest
    param: vault_unseal_keys
    type: list

  nomad:
  - description: The region that this deployment is being deployed to
    ask: What is the region
    param: region
  - description: The name of the BOSH network to deploy the Nomad nodes to
    param: node_network
  - description: The name of the BOSH disk type to give Nomad nodes
    param: node_disk_type
  - description: The name of the BOSH VM type for the Nomad nodes
    param: node_vm_type
  - description: The number of Nomad node instances
    param: node_instances


credentials:
  base:
    consul/encrypt:
      key: random 16 fmt base64
  vault: {}
  nomad:
    nomad/encrypt:
      key: random 16 fmt base64
    nomad/vault:
      token: random 5 fixed

certificates:
  base:
    consul/certs:
      ca: { valid_for: 10y }
      server:
        valid_for: 10y
        names:
        - consul.service.consul
        - localhost
        - 127.0.0.1
      agent:
        valid_for: 10y
        names:
        - consul.service.consul
        - localhost
        - 127.0.0.1
      vault:
        valid_for: 10y
        names:
        - vault.service.consul
        - localhost
        - 127.0.0.1
      nomad:
        valid_for: 10y
        names:
        - nomad.service.consul
        - localhost
        - 127.0.0.1

  vault:
    vault/certs:
      ca: { valid_for: 10y }
      server:
        valid_for: 10y
        names:
        - vault.service.consul
        - 127.0.0.1
      nomad:
        valid_for: 10y
        names:
        - nomad.service.consul
        - 127.0.0.1

  nomad:
    traefik/certs:
      ca: { valid_for: 10y }
      server:
        valid_for: 10y
        names:
        - traefik.service.consul
    nomad/certs:
      ca: { valid_for: 10y }
      server:
        valid_for: 10y
        names:
        - "server.${params.region}.nomad"
        - nomad.service.consul
        - localhost
        - 127.0.0.1
      client:
        valid_for: 10y
        names:
        - "client.${params.region}.nomad"
        - nomad.service.consul
        - localhost
        - 127.0.0.1
    docker/certs:
      ca: { valid_for: 10y }
      daemon:
        valid_for: 10y
        names:
        - docker_daemon
        - localhost
        - 127.0.0.1
