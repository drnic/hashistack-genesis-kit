---
name: hashistack
author: Justin Carter <justin@starkandwayne.com>
github: https://github.com/genesis-community/hashistack-genesis-kit
homepage: https://github.com/genesis-community/hashistack-genesis-kit

subkits:
- prompt: Do you want to use subkit 'vault'?
  subkit: vault
- prompt: Do you want to use subkit 'nomad'?
  subkit: nomad

params:
  base:
  - description: The datacenter that this deployment is being deployed to
    ask: What is the datacenter
    param: datacenter
  - description: Should ssl connections be verified via the provided ca certs
    param: verify_ssl
  - description: How many instances should be used for the main clusters
    param: server_instances
  - description: The encryption key is used to encrypt the gossip between nodes and generated via 'consul keygen'
    ask: What is the consul encryption key?
    vault: consul/encrypt:key
  - description: The name of the BOSH network to deploy the consul cluster to
    param: consul_network
  - description: The name of the BOSH disk pool to give Consul servers
    param: consul_disk_pool
  - description: The name of the BOSH VM type for the Consul servers
    param: consul_vm_type

  vault:
  - description: The name of the BOSH VM type for Vault to use
    param: vault_vm_type
  - description: |
      For zero-downtime updates provide a token with the policy
      path "sys/step-down" {
        capabilities = ["update", "sudo"]
      }
      This will allow BOSH to demote the leader node before updating
    param: vault_step_down_token
  - description: |
      For zero-downtime updates individual nodes must be unsealed after updating.
      By providing the unseal keys this will be taken care of automatically.
      It is highly advised to rekey Vault after each update so that the unseal keys
      don't remain exposed in the manifest
    param: vault_unseal_keys
    type: list
  - description: The name of the BOSH network to deploy Vault to
    param: vault_network
  - description: The name of the BOSH disk pool to give Vault servers
    param: vault_disk_pool
  - description: The name of the BOSH VM type for the Vault servers
    param: vault_vm_type

  nomad:
  - description: The region that this deployment is being deployed to
    ask: What is the region
    param: region
  - description: The encryption key is used to encrypt the gossip between nodes and generated via 'nomad keygen'
    ask: What is the nomad encryption key?
    vault: nomad/encrypt:key
  - description: The name of the BOSH network to deploy the Nomad servers to
    param: nomad_server_network
  - description: The name of the BOSH disk pool to give Nomad servers
    param: nomad_server_disk_pool
  - description: The name of the BOSH VM type for the Nomad servers
    param: nomad_server_vm_type
  - description: The name of the BOSH network to deploy the private Nomad nodes to
    param: nomad_private_network
  - description: The name of the BOSH disk pool to give private Nomad nodes
    param: nomad_private_disk_pool
  - description: The name of the BOSH VM type for the private Nomad nodes
    param: nomad_private_vm_type
  - description: The number of private Nomad node instances
    param: nomad_private_instances
  - description: The name of the BOSH network to deploy the edge Nomad nodes to
    param: nomad_edge_network
  - description: The name of the BOSH disk pool to give edge Nomad nodes
    param: nomad_edge_disk_pool
  - description: The name of the BOSH VM type for the edge Nomad nodes
    param: nomad_edge_vm_type
  - description: The number of edge Nomad node instances
    param: nomad_edge_instances


credentials:
  base: {}
  vault: {}

certificates:
  base:
    consul/certs:
      ca: { valid_for: 10y }
      server:
        valid_for: 10y
        names:
        - consul_peer
        - 127.0.0.1
      agent:
        valid_for: 10y
        names:
        - consul_agent
        - 127.0.0.1
      vault:
        valid_for: 10y
        names:
        - vault.service.consul
        - 127.0.0.1
      nomad:
        valid_for: 10y
        names:
        - nomad.service.consul
        - 127.0.0.1

  vault:
    vault/certs:
      ca: { valid_for: 10y }
      server:
        valid_for: 10y
        names:
        - vault.service.consul
        - 127.0.0.1

  nomad:
    nomad/certs:
      ca: { valid_for: 10y }
      server:
        valid_for: 10y
        names:
        - "server.${params.region}.nomad"
        - localhost
        - 127.0.0.1
      client:
        valid_for: 10y
        names:
        - "client.${params.region}.nomad"
        - localhost
        - 127.0.0.1
    docker/certs:
      ca: { valid_for: 10y }
      daemon:
        valid_for: 10y
        names:
        - docker_daemon
        - localhost
        - 127.0.0.1
